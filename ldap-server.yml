---
- hosts: dov
  remote_user: root
  tasks:
  - name: install OpenLDAP server
    yum:
      name: openldap,compat-openldap,openldap-clients,openldap-servers,openldap-servers-sql,openldap-devel,net-tools

  - name: start and enable ldap service
    service:
      name: slapd
      state: started
      enabled: yes

  - name: check 389 port is open for ldap
    shell: netstat -antup | grep -i 389
    register: ldapnet
  - debug: var=ldapnet.stdout_lines

  - name: set password for ldap
    expect:
      command: slappasswd
      responses:
        New password: "nasa2017sa5"
        Re-enter new password: "nasa2017sa5"
    register: ldappasswd
  - debug: var=ldappasswd.stdout_lines

  - name: make directory for ldif files
    file:
      path: /root/ldif
      state: directory

  - name: create db.ldif
    shell: |
        echo "# This file is generated by ansible.
        dn: olcDatabase={2}hdb,cn=config
        changetype: modify
        replace: olcSuffix
        olcSuffix: dc=ldapserver,dc=com
        
        dn: olcDatabase={2}hdb,cn=config
        changetype: modify
        replace: olcRootDN
        olcRootDN: cn=ldapadm,dc=ldapserver,dc=com
        
        dn: olcDatabase={2}hdb,cn=config
        changetype: modify
        replace: olcRootPW
        olcRootPW: {{ldappasswd.stdout_lines[2]}}
        " > /root/ldif/db.ldif

  - name: apply modification db.ldif to LDAP
    shell: ldapmodify -Y EXTERNAL  -H ldapi:/// -f /root/ldif/db.ldif
    register: ldapmoddb
  - debug: var=ldapmoddb.stdout_lines

  - name: create monitor.ldif
    shell: |
        echo "# This file is generated by ansible.
        dn: olcDatabase={1}monitor,cn=config
        changetype: modify
        replace: olcAccess
        olcAccess: {0}to * by dn.base=\"gidNumber=0+uidNumber=0,cn=peercred,cn=external, cn=auth\" read by dn.base=\"cn=ldapadm,dc=ldapserver,dc=com\" read by * none
        " > /root/ldif/monitor.ldif

  - name: apply modification monitor.ldif to LDAP
    shell: ldapmodify -Y EXTERNAL  -H ldapi:/// -f /root/ldif/monitor.ldif
    register: ldapmodmonitor
  - debug: var=ldapmodmonitor.stdout_lines

  - name: create self-signed certificates for LDAPS
    expect:
      command: openssl req -new -x509 -nodes -out /etc/openldap/certs/ldapcert.pem -keyout /etc/openldap/certs/ldapkey.pem -days 365
      responses:
        Country Name: "TW"
        State or Province Name: "R.O.C"
        Locality Name: "Taipei"
        Organization Name: "NTU"
        Organizational Unit Name: "CSIE"
        Common Name: "NASA2017"
        Email Address: ""
    register: openssl
  - debug: var=openssl.stdout_lines
  - file:
      path: /etc/openldap/certs/ldapcert.pem
      owner: ldap
      group: ldap
      state: file
  - file:
      path: /etc/openldap/certs/ldapkey.pem
      owner: ldap
      group: ldap
      state: file
  - shell: ls -l /etc/openldap/certs/*.pem
    register: ldapcerts
  - debug: var=ldapcerts.stdout_lines

  - name: create certs.ldif to tell LDAP using certs generated above
    shell: |
        echo "# This file is generated by ansible.
        dn: cn=config
        changetype: modify
        replace: olcTLSCertificateFile
        olcTLSCertificateFile: /etc/openldap/certs/ldapcert.pem
        
        dn: cn=config
        changetype: modify
        replace: olcTLSCertificateKeyFile
        olcTLSCertificateKeyFile: /etc/openldap/certs/ldapkey.pem
        " > /root/ldif/certs.ldif

  - name: apply modification certs.ldif to LDAP
    shell: ldapmodify -Y EXTERNAL  -H ldapi:/// -f /root/ldif/certs.ldif
    register: ldapmodcerts
  - debug: var=ldapmodcerts.stdout_lines

  - name: copy DB example configuration
    shell: cp /usr/share/openldap-servers/DB_CONFIG.example /var/lib/ldap/DB_CONFIG
  - file:
      path: /var/lib/ldap/DB_CONFIG
      owner: ldap
      group: ldap
      state: file

  - name: add schemas to LDAP
    shell: "ldapadd -Y EXTERNAL -H ldapi:/// -f /etc/openldap/schema/{{ item.name }}"
    with_items:
      - { name: 'cosine.ldif' }
      - { name: 'nis.ldif' }
      - { name: 'inetorgperson.ldif' }
    ignore_errors: yes

  - name: create base.ldif for base structure in LDAP
    shell: |
        echo "# This file is generated by ansible.
        dn: dc=ldapserver,dc=com
        dc: ldapserver
        objectClass: top
        objectClass: domain
        
        dn: cn=ldapadm ,dc=ldapserver,dc=com
        objectClass: organizationalRole
        cn: ldapadm
        description: LDAP Manager
        
        dn: ou=People,dc=ldapserver,dc=com
        objectClass: organizationalUnit
        ou: People
        
        dn: ou=Group,dc=ldapserver,dc=com
        objectClass: organizationalUnit
        ou: Group
        " > /root/ldif/base.ldif

  - name: add base.ldif to LDAP
    expect:
      command: ldapadd -x -W -D "cn=ldapadm,dc=ldapserver,dc=com" -f /root/ldif/base.ldif
      responses:
        Enter LDAP Password: "nasa2017sa5"
    ignore_errors: yes
    register: ldapaddbase
  - debug: var=ldapaddbase.stdout_lines

  - name: create postfix schema for postfixUser
    shell: |
        echo "# This file is generated by ansible.
        dn: cn=postfix,cn=schema,cn=config
        objectClass: olcSchemaConfig
        cn: postfix
        olcAttributeTypes: {0}( 1.3.6.1.4.1.4203.666.1.200 NAME 'mailacceptinggeneralid' DESC 'Postfix mail local address alias attribute' EQUALITY caseIgnoreMatch SUBSTR caseIgnoreSubstringsMatch SYNTAX 1.3.6.1.4.1.1466.115.121.1.15{1024} )
        olcAttributeTypes: {1}( 1.3.6.1.4.1.4203.666.1.201 NAME 'maildrop' DESC 'Postfix mail final destination attribute' EQUALITY caseIgnoreMatch SUBSTR caseIgnoreSubstringsMatch SYNTAX 1.3.6.1.4.1.1466.115.121.1.15{1024} )
        olcObjectClasses: {0}( 1.3.6.1.4.1.4203.666.1.100 NAME 'postfixUser' DESC 'Postfix mail user class' SUP top AUXILIARY MAY ( mailacceptinggeneralid $ maildrop ) )
        " > /root/ldif/postfix.ldif

  - name: add postfix schema
    expect:
      command: ldapadd -Y EXTERNAL -H ldapi:/// -f /root/ldif/postfix.ldif
      responses:
        Enter LDAP Password: "nasa2017sa5"
    ignore_errors: yes
    register: ldapaddpostfix
  - debug: var=ldapaddpostfix.stdout_lines

  - command: firewall-cmd --permanent --add-service=ldap
  - command: firewall-cmd --reload

  - name: modify rsyslog for ldap logs.
    lineinfile:
      path: /etc/rsyslog.conf
      line: 'local4.* /var/log/ldap.log'
  
  - name: restart rsyslog
    service:
      name: rsyslog
      state: restarted
      enabled: yes
